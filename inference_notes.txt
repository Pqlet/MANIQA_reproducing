I changed activations.py 
C:\Users\pqlet\pass\IQA\test_task_IQA\iqa_env\Lib\site-packages\torch\nn\modules\activations.py
Particularly:

class GELU(Module):
    r"""Applies the Gaussian Error Linear Units function:

    .. math:: \text{GELU}(x) = x * \Phi(x)

    where :math:`\Phi(x)` is the Cumulative Distribution Function for Gaussian Distribution.

    When the approximate argument is 'tanh', Gelu is estimated with:

    .. math:: \text{GELU}(x) = 0.5 * x * (1 + \text{Tanh}(\sqrt(2 / \pi) * (x + 0.044715 * x^3)))

    Args:
        approximate (str, optional): the gelu approximation algorithm to use:
            ``'none'`` | ``'tanh'``. Default: ``'none'``

    Shape:
        - Input: :math:`(*)`, where :math:`*` means any number of dimensions.
        - Output: :math:`(*)`, same shape as the input.

    .. image:: ../scripts/activation_images/GELU.png

    Examples::

        >>> m = nn.GELU()
        >>> input = torch.randn(2)
        >>> output = m(input)
    """
    __constants__ = ['approximate']
    approximate: str

    def __init__(self, approximate: str = 'none') -> None:
        super(GELU, self).__init__()
        print('HELLO')
        self.approximate = approximate

    def forward(self, input: Tensor) -> Tensor:
        # WAS LIKE THIS return F.gelu(input, approximate=self.approximate)
        return F.gelu(input, approximate='none')

    def extra_repr(self) -> str:
        return 'approximate={}'.format(repr(self.approximate))
